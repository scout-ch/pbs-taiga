apiVersion: apps/v1
kind: Deployment
metadata:
  name: taiga-events-rabbitmq
  namespace: pbs-taiga
spec:
  selector:
    matchLabels:
      app: taiga-events-rabbitmq
  template:
    metadata:
      labels:
        app: taiga-events-rabbitmq
    spec:
      containers:
        - name: taiga-events-rabbitmq
          image: rabbitmq:3.8-management-alpine
          ports:
            - containerPort: 5672
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              value: "secret-erlang-cookie"
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  name: taiga-mappable-config
                  key: EVENTS_RABBITMQ_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: taiga-mappable-secrets
                  key: EVENTS_RABBITMQ_PASS
            - name: RABBITMQ_DEFAULT_VHOST
              valueFrom:
                configMapKeyRef:
                  name: taiga-mappable-config
                  key: EVENTS_RABBITMQ_VHOST
            - name: RABBITMQ_VM_MEMORY_HIGH_WATERMARK
              value: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: taiga-events-rabbitmq
  namespace: pbs-taiga
spec:
  selector:
    app: taiga-events-rabbitmq
  ports:
    - port: 5672
      targetPort: 5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taiga-events
  namespace: pbs-taiga
  labels:
    app: taiga-events
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: taiga-events
  template:
    metadata:
      labels:
        app: taiga-events
    spec:
      containers:
        - name: taiga-events
          image: taigaio/taiga-events:6.7.0
          ports:
            - containerPort: 8888
          env:
            - name: EVENTS_PUSH_BACKEND_URL
              valueFrom:
                secretKeyRef:
                  name: taiga-secrets
                  key: EVENTS_PUSH_BACKEND_URL
            - name: TAIGA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: taiga-secrets
                  key: TAIGA_SECRET_KEY
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            tcpSocket:
              port: 8888
          readinessProbe:
            tcpSocket:
              port: 8888
          startupProbe:
            tcpSocket:
              port: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: taiga-events
  namespace: pbs-taiga
spec:
  selector:
    app: taiga-events
  ports:
    - port: 8888
      targetPort: 8888
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: taiga-events
  namespace: pbs-taiga
  labels:
    app: taiga-events
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
spec:
  rules:
    - host: taiga.k8s.tractor.scout.ch
      http:
        paths:
          - pathType: Prefix
            path: "/events"
            backend:
              service:
                name: taiga-events
                port:
                  number: 8888

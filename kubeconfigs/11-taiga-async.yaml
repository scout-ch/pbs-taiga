apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: taiga-async-rabbitmq
  namespace: pbs-taiga
spec:
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taiga-async-rabbitmq
  namespace: pbs-taiga
spec:
  selector:
    matchLabels:
      app: taiga-async-rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: taiga-async-rabbitmq
    spec:
      containers:
        - name: taiga-async-rabbitmq
          image: rabbitmq:3.8-management-alpine@sha256:c3e526769bfd885c898d1132e1008b216800e8543619c30d5959b220285564ef
          ports:
            - containerPort: 5672
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              value: "secret-erlang-cookie"
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  name: taiga-mappable-config
                  key: ASYNC_RABBITMQ_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: taiga-mappable-secrets
                  key: ASYNC_RABBITMQ_PASS
            - name: RABBITMQ_DEFAULT_VHOST
              valueFrom:
                configMapKeyRef:
                  name: taiga-mappable-config
                  key: ASYNC_RABBITMQ_VHOST
            - name: RABBITMQ_VM_MEMORY_HIGH_WATERMARK
              value: "256MB"
          volumeMounts:
            - name: taiga-async-rabbitmq
              mountPath: /var/lib/rabbitmq
      volumes:
        - name: taiga-async-rabbitmq
          persistentVolumeClaim:
            claimName: taiga-async-rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taiga-async
  namespace: pbs-taiga
  labels:
    app: taiga-async
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: taiga-async
  template:
    metadata:
      labels:
        app: taiga-async
    spec:
      affinity:
        podAffinity: # We need to schedule this on the same node as taiga-back because of shared volumes
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - taiga-back
              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: taiga-static
          persistentVolumeClaim:
            claimName: taiga-static
        - name: taiga-media
          persistentVolumeClaim:
            claimName: taiga-media
      containers:
        - name: taiga-async
          image: ghcr.io/scout-ch/pbs-taiga-back:main
          ports:
            - containerPort: 8000
          command: ["/taiga-back/docker/async_entrypoint.sh"]
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: taiga-config
            - secretRef:
                name: taiga-secrets
          volumeMounts:
            - name: taiga-static
              mountPath: /taiga-async/static
            - name: taiga-media
              mountPath: /taiga-async/media
---
apiVersion: v1
kind: Service
metadata:
  name: taiga-async-rabbitmq
  namespace: pbs-taiga
spec:
  selector:
    app: taiga-async-rabbitmq
  ports:
    - port: 5672
      targetPort: 5672
